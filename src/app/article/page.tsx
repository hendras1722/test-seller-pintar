import PaginationComponents from '@/components/client/PaginationComponents'
import { Input } from '@/components/ui/input'
import { Fragment } from 'react'
import List from './List'

export default function Landing() {
  const data = [
    {
      id: '04fb7996-f320-4616-802a-f6d5e29b6c93',
      userId: 'dee2e709-189f-41f6-a87d-f682b292e640',
      categoryId: '1c526098-d855-40b0-868e-dbf248ca4ec3',
      title: 'The Impact of Digital Transformation on Global Economies',
      content:
        '<p>In the 21st century, digital transformation has become a driving force behind economic growth, reshaping industries, and altering the way businesses operate. From artificial intelligence (AI) to blockchain and e-commerce, technological advancements are revolutionizing economies worldwide. This article explores how digital transformation is influencing global economic trends, the challenges it presents, and the opportunities it creates.  </p><br><p><strong>1. Boosting Productivity and Efficiency</strong> </p><br><p>Digital technologies enhance productivity by automating processes, reducing operational costs, and improving efficiency. Businesses leveraging cloud computing, big data analytics, and AI can make data-driven decisions, optimize supply chains, and deliver personalized customer experiences. For instance, manufacturing firms using the Internet of Things (IoT) can predict equipment failures, minimizing downtime and increasing output.  </p><br><p><strong>2. The Rise of the Digital Economy</strong></p><br><p>E-commerce, fintech, and gig economies are expanding rapidly. Platforms like Amazon, Alibaba, and Shopify have transformed retail, while digital payment systems such as PayPal and mobile wallets facilitate seamless transactions. The gig economy, powered by apps like Uber and Upwork, provides flexible employment opportunities, contributing to GDP growth in many countries.  </p><br><p><strong>3. Job Market Evolution</strong></p><br><p>While digitalization creates new job opportunities in tech-driven sectors, it also disrupts traditional roles. Automation and AI may replace repetitive jobs, requiring workers to upskill. Governments and businesses must invest in education and training programs to prepare the workforce for a digital future.  </p><br><p><strong>4. Challenges: Inequality and Cybersecurity Risks</strong></p><br><p>The digital divide between technologically advanced and developing nations could widen economic inequality. Additionally, cyber threats pose risks to businesses and financial systems. Strong regulatory frameworks and cybersecurity measures are essential to protect data and maintain trust in digital economies.  </p><br><p><strong>5. Future Outlook </strong></p><br><p>Countries embracing digital innovation will likely gain a competitive edge. Policymakers should promote digital infrastructure, foster innovation, and ensure inclusive growth. The integration of 5G, AI, and green technology will further shape economic landscapes in the coming decades.  </p><br><p><strong>Conclusion</strong></p><br><p>Digital transformation is a double-edged sword—offering immense economic potential while presenting challenges. By adopting adaptive policies and investing in technology, nations can harness its benefits for sustainable development. The future economy will be defined by those who can innovate and adapt to the digital age.</p><br>',
      imageUrl:
        'https://s3.sellerpintar.com/articles/articles/1748840269006-images (2).jpg',
      createdAt: '2025-06-02T04:57:49.094Z',
      updatedAt: '2025-06-04T06:30:41.908Z',
      category: {
        id: '1c526098-d855-40b0-868e-dbf248ca4ec3',
        userId: '3c8831bf-b7b7-48ab-b487-dc6764243c36',
        name: 'Economy',
        createdAt: '2025-06-02T04:48:37.104Z',
        updatedAt: '2025-06-02T04:59:24.465Z',
      },
      user: {
        id: 'dee2e709-189f-41f6-a87d-f682b292e640',
        username: 'Saya adalah admin',
      },
    },
    {
      id: '0ccb3db0-7591-41be-a19f-050d243458da',
      userId: '96c0157e-a321-4bb4-b1aa-12c791787f71',
      categoryId: '57e92208-65fb-439e-b912-a47d52e0e2a2',
      title: '15 Best Continuous Integration (CI) Tools for DevOps in 2025',
      content:
        '<p class="ql-align-justify">Continuous Integration (CI) automates the process of building and testing software projects. It lets changes merge into your codebase as soon as they’re ready, without making developers run complex manual tasks. This improves DevOps lifecycle performance and reliability.</p><p class="ql-align-justify">In this round-up, we’ll examine 15 of the top continuous integration tools of this year. Some are popular all-rounders, whereas others offer unique capabilities for specific use cases. We’ll explain each tool’s features so you can make an informed decision about which is best for your project and team.</p><p class="ql-align-justify"><strong>What is a continuous integration (CI) tool?</strong></p><p class="ql-align-justify">A continuous integration (CI) tool automates the process of merging and testing code changes in a shared repository. It helps detect integration issues early by running automated builds and tests every time developers push code.&nbsp;CI tools connect to your source repositories to run build, test, and delivery jobs whenever code changes. If a job fails, they provide immediate feedback, allowing you to easily implement continuous integration pipelines in your workflows. Key features of continuous integration tools. Continuous Integration (CI) tools provide a platform for building CI pipelines. Many tools can also be used for continuous delivery (CD) and deployment tasks, so they’re often described as CI/CD solutions. A good CI/CD tool should support the needs of everyone involved in your software projects. It must be quick and easy for DevOps teams to configure secure pipelines, while developers require direct access to pipeline results. Many solutions also provide vital data to business leaders by collecting DevOps lifecycle metrics.</p><ul><li class="ql-align-justify"><br></li><li class="ql-align-justify">Top features to look for in CI tools include:</li><li>Simple and expressive pipeline configuration syntax</li><li>Robust job parallelization options</li><li>Easy access to pipelines logs and artifacts, such as through integrations with developer IDEs and terminals</li><li>Ability to modularize and reuse pipeline components</li><li>Access to a marketplace of prebuilt configs for common pipeline tasks</li><li>Built-in artifact storage for generated binaries, container images, and other job outputs</li><li>Job isolation, security, and compliance capabilities</li><li>You should also consider which types of workflow your CI solution is built for.&nbsp;</li></ul><p class="ql-align-justify"><br></p><p class="ql-align-justify">Most traditional CI tools are designed for application pipelines, where source code has to be tested, built, and released. They can be difficult to use for other types of processes, such as infrastructure pipelines that run stateful IaC tools.&nbsp;</p><p class="ql-align-justify">In comparison, IaC-specific platforms like Spacelift provide a focused infrastructure management experience, but can’t be used for app-oriented tasks.</p><h2 class="ql-align-justify">Top DevOps continuous integration tools to try</h2><p class="ql-align-justify"><br></p><p class="ql-align-justify">Let’s check out some of the top CI tools to use in your DevOps workflows. Whether you’re building source code, deploying infrastructure, or managing serverless apps, we’ve got you covered.&nbsp;</p><p class="ql-align-justify">The list of the best continuous integration tools includes:</p><ul><li class="ql-align-justify">Spacelift</li><li class="ql-align-justify">GitHub Actions</li><li class="ql-align-justify">GitLab CI/CD</li><li class="ql-align-justify">Bitbucket Pipelines</li><li class="ql-align-justify">Atlassian Bamboo</li><li class="ql-align-justify">JetBrains TeamCity</li><li class="ql-align-justify">Azure Pipelines</li><li class="ql-align-justify">AWS CodePipeline</li><li class="ql-align-justify">Google Cloud Build</li><li class="ql-align-justify">Jenkins</li><li class="ql-align-justify">CircleCI</li><li class="ql-align-justify">Travis CI</li><li class="ql-align-justify">CloudBees CodeShip</li><li class="ql-align-justify">Buddy</li><li class="ql-align-justify">Semaphore</li></ul><p class="ql-align-justify"><br></p><p class="ql-align-justify">Nonetheless, this isn’t an exhaustive list, so don’t worry if you can’t find a perfect fit. There are plenty more tools available in the busy CI/CD space.</p><h3 class="ql-align-justify"><br></h3><h3 class="ql-align-justify"><strong>1. Spacelift</strong></h3><p class="ql-align-justify">Spacelift is a CI/CD solution specifically designed for infrastructure automation. It uses a GitOps strategy to connect to your IaC repositories and automatically runs tools like Terraform and Pulumi as you add new commits. Spacelift integrates with the IAM services in AWS, Azure, and GCP to dynamically generate temporary credentials that keep your infrastructure secure.</p><p class="ql-align-justify">Spacelift also lets you visualize your provisioned resources using a single centralized interface. With policy-as-code guardrails, you can enforce precise security, compliance, and access requirements, while self-service Blueprints let developers quickly spin up new infrastructure on demand. These features unlock more effective infrastructure management processes that scale throughout the DevOps lifecycle.</p><h4 class="ql-align-justify">Key Spacelift features</h4><ul><li class="ql-align-justify">Automates running IaC tools as you commit to your repositories</li><li class="ql-align-justify">Provision, configure, and govern infrastructure in one place</li><li class="ql-align-justify">Supports Policy-as-Code to enforce security and compliance requirements</li><li class="ql-align-justify">Built-in drift detection capabilities find and fix infrastructure misconfigurations</li><li class="ql-align-justify">Integrated Terraform state management and module registry</li></ul><p class="ql-align-justify"><strong>Price: </strong>Free tier available; paid subscription for additional features</p><p class="ql-align-justify"><strong>Website:</strong> https://spacelift.io&nbsp;</p><p class="ql-align-justify"><strong>Use case example: </strong>How to improve your infrastructure orchestration with Spacelift</p><p class="ql-align-justify">When you shift to treating infrastructure like a software project, you need all the components a software project has. That means having a CI/CD platform in place, and most aren’t suited to the demands of IaC. Insurtech company Kin discovered that Spacelift was purpose-built to fill that gap.</p><p class="ql-align-justify"><strong>Spacelift customer case study</strong></p><p class="ql-align-justify"><br></p><p class="ql-align-justify"><strong><u>Read the full story</u></strong></p><h3 class="ql-align-justify"><strong>2. GitHub Actions</strong></h3><p class="ql-align-justify">GitHub Actions is a continuous integration service included with GitHub projects. It’s an easy way to start building CI pipelines without adding any extra platforms to your workflow.&nbsp;</p><p class="ql-align-justify">GitHub Actions is often considered the best CI tool for small teams, especially if they already use GitHub.</p><p class="ql-align-justify">GitHub Actions pipelines are highly modular, so it’s easy to reuse configurations across different projects and teams. You can compose pipelines from prebuilt actions that you can customize using parameter inputs.&nbsp;</p><p class="ql-align-justify">The GitHub Marketplace offers a large selection of community-contributed actions.</p><h4 class="ql-align-justify">Key GitHub Actions features</h4><ul><li class="ql-align-justify">Convenient for existing GitHub projects</li><li class="ql-align-justify">Composable pipeline architecture</li><li class="ql-align-justify">Community library of prebuilt pipeline components</li><li class="ql-align-justify">General-purpose tool that can be customized for many different use cases</li><li class="ql-align-justify">Supports hosted and self-managed job runners</li></ul><p class="ql-align-justify"><strong>Price/License: </strong>Free for public repositories; paid plans for private repositories</p><p class="ql-align-justify"><strong>Website: </strong>https://github.com/features/actions&nbsp;</p><p class="ql-align-justify"><strong>Use case example: </strong>How to manage and scale Terraform with GitHub Actions</p><h3 class="ql-align-justify"><br></h3><h3 class="ql-align-justify"><strong>3. GitLab CI/CD</strong></h3><p class="ql-align-justify">GitLab CI/CD is a popular CI solution that’s deeply integrated with GitLab’s DevOps platform. Its features include native Kubernetes GitOps deployments via Flux CD and prebuilt templates that automatically test and scan your code.</p><p class="ql-align-justify">GitLab CI/CD pipelines support several different mechanisms for modularizing jobs. You can import configs from other projects, or use the new GitLab CI/CD Catalog to publish reusable components within your organization.&nbsp;</p><p class="ql-align-justify">The whole platform can also be self-hosted on your own infrastructure, giving you complete control over job execution and sensitive data like CI/CD variables.</p><h4 class="ql-align-justify">Key GitLab CI/CD features</h4><ul><li class="ql-align-justify">Open-core solution with self-hosting support</li><li class="ql-align-justify">Deep integration with other GitLab DevOps features</li><li class="ql-align-justify">Supports automated SAST and vulnerability scans</li><li class="ql-align-justify">Robust compliance controls to enforce job requirements</li><li class="ql-align-justify">Versatile pipeline execution options</li></ul><p class="ql-align-justify"><strong>Price: </strong>Free tier available; paid plans for enhanced features</p><p class="ql-align-justify"><strong>Website:</strong> https://about.gitlab.com/&nbsp;</p><p class="ql-align-justify"><strong>Use case example: </strong>How to manage Terraform state with GitLab</p><h3 class="ql-align-justify"><br></h3><h3 class="ql-align-justify"><strong>4. Bitbucket Pipelines</strong></h3><p class="ql-align-justify">Bitbucket Pipelines is a continuous integration system for Bitbucket Cloud users. It’s particularly powerful when used alongside other Atlassian solutions: You can display pipeline statuses in tools like Jira and Confluence to keep team members informed of CI activity.</p><p class="ql-align-justify">Bitbucket Pipelines is designed to simplify CI setup tasks, including integration with popular third-party DevOps services. Its Pipes feature provides out-of-the-box support for over 100 platforms, including monitoring suites, scanning tools, and incident management solutions.</p><h4 class="ql-align-justify">Key Bitbucket Pipelines features</h4><ul><li class="ql-align-justify">Over 100 built-in integrations</li><li class="ql-align-justify">Connects to other Atlassian services</li><li class="ql-align-justify">Supports versatile pipeline templates</li><li class="ql-align-justify">Governance capabilities to continually enforce CI policies</li><li class="ql-align-justify">Unlimited concurrent pipeline runs</li></ul><p class="ql-align-justify"><strong>Price:</strong> Free tier available; paid plans offer increased user limits and advanced features</p><p class="ql-align-justify"><strong>Website: </strong>https://bitbucket.org/product/&nbsp;</p><h3 class="ql-align-justify"><br></h3><h3 class="ql-align-justify"><strong>5. Atlassian Bamboo</strong></h3><p class="ql-align-justify">Bamboo is another tool from the Atlassian stable. It’s now only available in the self-managed Data Center flavor. The platform’s aimed at enterprise users who want to operate their own CI infrastructure.</p><p class="ql-align-justify">Bamboo Data Center offers complete control of your environment, potentially improving scalability, compliance, and operational resilience. It integrates well with other Atlassian tools, including Bitbucket and Jira, but can also be used with repositories hosted in external source control platforms.</p><h4 class="ql-align-justify">Key Atlassian Bamboo features</h4><ul><li class="ql-align-justify">Self-hosted enterprise-grade platform</li><li class="ql-align-justify">Automates continuous delivery workflows with Docker and AWS CodeDeploy</li><li class="ql-align-justify">Designed for high availability and scalability</li><li class="ql-align-justify">Supports up to 2,000+ build agents</li><li class="ql-align-justify">Integrates with Bitbucket and Jira</li></ul><p class="ql-align-justify"><strong>Price: </strong>Commercial license with per-agent pricing</p><p class="ql-align-justify"><strong>Website: </strong>https://www.atlassian.com/software/bamboo&nbsp;</p><p class="ql-align-justify"><strong>💡 You might also like:</strong></p><ul><li class="ql-align-justify">DevOps Tech Stack : How to Choose the Right Tools &amp; Solutions</li><li class="ql-align-justify">11 Ways to Improve Your Infrastructure Orchestration</li><li class="ql-align-justify">DevOps Implementation Guide [Plan, Strategy &amp; Steps]</li></ul><h3 class="ql-align-justify"><br></h3><h3 class="ql-align-justify"><strong>6. JetBrains TeamCity</strong></h3><p class="ql-align-justify">TeamCity is a CI/CD solution from JetBrains, also known for its popular desktop IDE solutions. TeamCity is deeply integrated with those IDEs, so you can easily monitor build progress, get test results, and debug problems without having to switch between apps.</p><p class="ql-align-justify">TeamCity is also designed to maximize build efficiency. It automatically optimizes when pipelines run to reduce waste and speed up your builds. Unnecessary steps are skipped automatically based on the results of previous runs, so developers get meaningful feedback faster.</p><h4 class="ql-align-justify">Key JetBrains TeamCity features</h4><ul><li class="ql-align-justify">Excellent integration with JetBrains IDEs</li><li class="ql-align-justify">Highly scalable with unlimited concurrency</li><li class="ql-align-justify">Available as a cloud-hosted or self-managed platform</li><li class="ql-align-justify">Self-optimizing pipelines improve efficiency with minimal configuration</li><li class="ql-align-justify">Supports complex pipeline relationships with nested dependencies and triggers</li></ul><p class="ql-align-justify"><strong>Pricing/License: </strong>Free tier available; paid plans for additional features</p><p class="ql-align-justify"><strong>Website: </strong>https://www.jetbrains.com/teamcity&nbsp;</p><h3 class="ql-align-justify"><br></h3><h3 class="ql-align-justify"><strong>7. Azure Pipelines</strong></h3><p class="ql-align-justify">Azure Pipelines is the CI/CD tool bundled with Microsoft’s Azure DevOps suite of services. It includes powerful features for managing workflows using chained builds, multi-phase rollouts, and feature gates. This makes it simple to move code from repositories to live environments, whether in Azure, AWS, Google Cloud, or a serverless platform.</p><p class="ql-align-justify">Azure Pipelines is supported by an active ecosystem of community-maintained pipeline components that make it easier to get started. It’s also backed by the security, compliance, and access management capabilities of the Azure platform, making it a popular choice for enterprises operating at scale.</p><h4 class="ql-align-justify">Key Azure Pipelines features</h4><ul><li class="ql-align-justify">Designed to unify integration, delivery, and deployment tasks</li><li class="ql-align-justify">Advanced deployment features include multi-phase rollouts and feature gates</li><li class="ql-align-justify">Cloud-agnostic (doesn’t assume use of other Azure services)</li><li class="ql-align-justify">Cross-platform Microsoft-hosted or self-managed build agents</li><li class="ql-align-justify">Native support for container workflows and Kubernetes</li></ul><p class="ql-align-justify"><strong>Price/license:</strong> Free tier available; paid plans for additional features</p><p class="ql-align-justify"><strong>Website: </strong>https://azure.microsoft.com/en-gb/products/devops/pipelines&nbsp;</p><p class="ql-align-justify"><strong>Use case example:</strong> Azure Pipelines Tutorial&nbsp;</p><h3 class="ql-align-justify"><br></h3><h3 class="ql-align-justify"><strong>8. AWS CodePipeline</strong></h3><p class="ql-align-justify">AWS CodePipeline is a managed CI/CD service available as part of the broader AWS platform. It’s designed to seamlessly integrate with other AWS services, including CodeBuild, CodeDeploy, and Fargate. It also connects to AWS IAM, so you can centrally manage pipeline access controls.</p><p class="ql-align-justify">CodePipeline pipelines are configured using declarative JSON files. A wide variety of plugins provide prebuilt workflows for common use cases, making it easy to get up and running.&nbsp;</p><p class="ql-align-justify">If you need more control, then you can run AWS Lambda functions during any pipeline stage to implement more complex processes.</p><h4 class="ql-align-justify">Key AWS CodePipeline features</h4><ul><li class="ql-align-justify">Seamless integration with other AWS services</li><li class="ql-align-justify">Fully automated pipelines for the most common build and deployment workflows</li><li class="ql-align-justify">Billed as part of AWS, but includes one free pipeline per month</li><li class="ql-align-justify">Supports management using the AWS Console or CLI</li><li class="ql-align-justify">Powerful access controls based on AWS IAM policies</li></ul><p class="ql-align-justify"><strong>Price/license:</strong> Pay-as-you-go; pricing based on usage</p><p class="ql-align-justify"><strong>Website: </strong>https://aws.amazon.com/codepipeline&nbsp;</p><h3 class="ql-align-justify"><br></h3><h3 class="ql-align-justify"><strong>9. Google Cloud Build</strong></h3><p class="ql-align-justify">Google Cloud Build is Google’s fully managed serverless CI/CD platform. The service integrates with other Google Cloud products, including App Engine, Cloud Run, and Cloud Functions, to automate your code integration and delivery processes.</p><p class="ql-align-justify">You can use Cloud Build to build your source code, run tests, and then launch deployments into Google Cloud. The infrastructure is managed for you with 15 different available machine types, so it’s easy to scale up as your projects grow.</p><h4 class="ql-align-justify">Key Google Cloud Build features</h4><ul><li class="ql-align-justify">Tight integration with the Google Cloud platform</li><li class="ql-align-justify">2,500 free build minutes per month</li><li class="ql-align-justify">No infrastructure configuration required</li><li class="ql-align-justify">Wide selection of build agent hardware types to choose from</li><li class="ql-align-justify">Built-in supply chain management features, including container image vulnerability scans</li></ul><p class="ql-align-justify"><strong>Price: </strong>Free tier available; pay-as-you-go pricing based on build minutes and machine type</p><p class="ql-align-justify"><strong>Website:</strong> https://cloud.google.com/build&nbsp;</p><h3 class="ql-align-justify"><br></h3><h3 class="ql-align-justify"><strong>10. Jenkins</strong></h3><p class="ql-align-justify">Jenkins is one of the oldest and best-known CI/CD solutions. It’s a general-purpose self-hosted automation server that can implement any kind of software delivery process. It has proven to be versatile and reliable, but it can be more complex to set up than modern managed platforms.</p><p class="ql-align-justify">Jenkins pipelines are written in the Groovy scripting language. They offer robust concurrency options and are easy to scale across distributed compute instances.&nbsp;</p><p class="ql-align-justify">Jenkins also integrates with popular Git hosting platforms, cloud providers, and serverless platforms via its large ecosystem of community plugins.</p><h4 class="ql-align-justify">Key Jenkins features</h4><ul><li class="ql-align-justify">Self-hosted open-source system</li><li class="ql-align-justify">Huge plugin ecosystem</li><li class="ql-align-justify">Proven resiliency at scale</li><li class="ql-align-justify">Robust distributed build support</li><li class="ql-align-justify">Versatile architecture is adaptable to many different pipeline types</li></ul><p class="ql-align-justify"><strong>Price/License: </strong>Free (open-source); costs depend on self-hosting infrastructure and maintenance</p><p class="ql-align-justify"><strong>Website</strong>: https://www.jenkins.io/&nbsp;</p><p class="ql-align-justify"><strong>Use case example: </strong>How to Manage Terraform with Jenkins</p><h3 class="ql-align-justify"><br></h3><h3 class="ql-align-justify"><strong>11. CircleCI</strong></h3><p class="ql-align-justify">CircleCI is a continuous integration platform designed to simplify DevOps build, test, and deployment processes at scale. It automates the key stages of the software delivery lifecycle while providing clear visibility into job activity, triggers, and failures.</p><p class="ql-align-justify">CircleCI connects to your Git repositories in services including GitHub, GitLab, and Bitbucket. Builds run either in the cloud or on self-hosted agents within your own infrastructure.&nbsp;</p><p class="ql-align-justify">Many different pipeline concurrency and execution options are supported, including parallel, sequential, and matrix builds.</p><h4 class="ql-align-justify">Key CircleCI features</h4><ul><li class="ql-align-justify">Designed for speed and flexibility</li><li class="ql-align-justify">Good scalability and various concurrency options</li><li class="ql-align-justify">Supports modular pipeline config packages</li><li class="ql-align-justify">Enterprise plan includes compliance policies and SSO</li><li class="ql-align-justify">Available as a cloud-hosted platform with a free plan, or self-hosted for private cloud</li></ul><p class="ql-align-justify"><strong>Price:</strong> Free tier available; paid plans with more build minutes, concurrency, and advanced support</p><p class="ql-align-justify"><strong>Website: </strong>https://circleci.com/&nbsp;</p><p class="ql-align-justify"><strong>Read more:</strong> CircleCI vs. Jenkins – CI/CD Tools Comparison</p><h3 class="ql-align-justify"><br></h3><h3 class="ql-align-justify"><strong>12. Travis CI</strong></h3><p class="ql-align-justify">Travis CI is a popular CI solution that focuses on simplicity. Its YAML-based pipeline syntax is much more compact than other solutions. This means it’s easier to learn, letting you configure reliable pipelines with less effort.</p><p class="ql-align-justify">Travis CI also features strong security and compliance capabilities. For instance, native integration with Hashicorp Vault lets you safely configure pipeline credentials. Similarly, robust supply chain integrity controls allow you to easily sign pipeline artifacts or generate an SBOM (Software Bill of Materials) for your builds.</p><h4 class="ql-align-justify">Key Travis CI features</h4><ul><li class="ql-align-justify">Supports parallel and matrix builds</li><li class="ql-align-justify">Simple config syntax designed for readability</li><li class="ql-align-justify">Integrates with Hashicorp Vault for secrets management</li><li class="ql-align-justify">Up to 300 concurrent cloud builds</li><li class="ql-align-justify">Includes supply chain management capabilities</li></ul><p class="ql-align-justify"><strong>Price:</strong> Free tier for open-source projects; paid plans required for private repositories and enterprise features</p><p class="ql-align-justify"><strong>Website:</strong> https://www.travis-ci.com&nbsp;</p><h3 class="ql-align-justify"><br></h3><h3 class="ql-align-justify"><strong>13. CloudBees CodeShip</strong></h3><p class="ql-align-justify">CloudBees CodeShip is a CI/CD platform delivered as a cloud SaaS solution. It offers a guided experience designed to facilitate the quick implementation of continuous integration processes for various app types. CodeShip strongly prioritizes developer needs to help maximize productivity throughout the DevOps lifecycle.</p><p class="ql-align-justify">CodeShip integrates with major Git hosting platforms, cloud providers, and DevOps services. Your builds run on dedicated AWS instances to ensure predictable performance and avoid the security risks of shared infrastructure.&nbsp;</p><p class="ql-align-justify">CodeShip Pro adds more project management and monitoring capabilities, including centralized dashboards that provide convenient project health visualizations.</p><h4 class="ql-align-justify">Key CloudBees CodeShip features</h4><ul><li class="ql-align-justify">Builds run on dedicated AWS instances</li><li class="ql-align-justify">Project dashboards offer high-level health overviews</li><li class="ql-align-justify">Developer-oriented platform</li><li class="ql-align-justify">A variety of job concurrency options</li><li class="ql-align-justify">Versatile third-party service integration options</li></ul><p class="ql-align-justify"><strong>Price:</strong> Paid plans with scalable concurrency and parallelism options</p><p class="ql-align-justify"><strong>Website:</strong> https://www.cloudbees.com/products/codeship&nbsp;</p><h3 class="ql-align-justify"><br></h3><h3 class="ql-align-justify"><strong>14. Buddy</strong></h3><p class="ql-align-justify">Buddy is a suite of DevOps and platform engineering tools designed to automate the software delivery process. It focuses heavily on deployment pipelines but can also be used for integration tasks such as code tests and builds.</p><p class="ql-align-justify">You can trigger pipelines based on various events, including those from platforms like GitHub, AWS, and Slack.</p><p class="ql-align-justify">Buddy pipelines are configured using YAML files or via the platform’s clear visual editor. The service supports concurrent pipelines, matrix builds, and orchestrated platforms across thousands of distributed targets. Buddy also connects to OIDC providers and includes a built-in secrets store.</p><h4 class="ql-align-justify">Key Buddy features</h4><ul><li class="ql-align-justify">Versatile platform for automating DevOps workflows</li><li class="ql-align-justify">Flexible pipeline triggers based on external events</li><li class="ql-align-justify">Orchestrates deployments across multiple environments</li><li class="ql-align-justify">One platform for all DevOps and Platform Engineering delivery tasks</li><li class="ql-align-justify">Built-in secrets store secures pipeline credentials</li></ul><p class="ql-align-justify"><strong>Price/license: </strong>Free tier available; paid plans for additional features</p><p class="ql-align-justify"><strong>Website: </strong>https://buddy.works&nbsp;</p><p class="ql-align-justify"><br></p><p class="ql-align-justify">Semaphore also strongly emphasizes pipeline reliability.&nbsp;</p><p class="ql-align-justify">For instance, a flaky test dashboard helps you identify test cases that need improvement. This guides you towards making targeted pipeline optimizations that save time and give developers more actionable results. Similarly, Semaphore’s monorepo features ensure only relevant pipeline stages run, based on the microservices to which each commit changes.</p><h4 class="ql-align-justify">Key Semaphore Features</h4><ul><li class="ql-align-justify">Fully open-source solution</li><li class="ql-align-justify">Visual pipeline editor</li><li class="ql-align-justify">Dashboards highlight test failures and flakiness</li><li class="ql-align-justify">Optimized monorepo features prevent waste at scale</li><li class="ql-align-justify">Supports SSO, OpenID, and audit trails for compliance</li></ul><p class="ql-align-justify"><strong>Price/license:</strong> Free tier available; paid plans for additional features</p><p class="ql-align-justify"><strong>Website: </strong>https://semaphoreci.com&nbsp;</p><h2 class="ql-align-justify"><br></h2><h2 class="ql-align-justify"><strong>Key points</strong></h2><p class="ql-align-justify">Continuous integration (CI) tools simplify implementing continuous integration processes within the DevOps lifecycle. They allow you to automate crucial code delivery tasks such as running tests, building artifacts, and preparing deployments. Replacing manual workflows with CI-driven automation makes the DevOps lifecycle safer, faster, and more scalable.</p><p class="ql-align-justify">We’ve covered 15 of the most popular CI tools, but you shouldn’t restrict yourself to picking only one. Many teams benefit from using multiple CI solutions for different use cases.&nbsp;</p><p class="ql-align-justify">For instance, you might choose GitHub Actions for your application pipelines and use a purpose-built IaC orchestration platform like Spacelift to optimize your infrastructure management processes.</p>',
      imageUrl:
        'https://s3.sellerpintar.com/articles/articles/1748621340731-593.png',
      createdAt: '2025-05-30T16:09:45.446Z',
      updatedAt: '2025-05-31T16:58:38.023Z',
      category: {
        id: '57e92208-65fb-439e-b912-a47d52e0e2a2',
        userId: '96c0157e-a321-4bb4-b1aa-12c791787f71',
        name: 'Technology',
        createdAt: '2025-05-29T16:09:05.278Z',
        updatedAt: '2025-05-29T16:09:05.278Z',
      },
      user: {
        id: '96c0157e-a321-4bb4-b1aa-12c791787f71',
        username: 'Admin Naufan',
      },
    },
    {
      id: '0ce84844-d0f7-4b13-a8fe-423147055c9c',
      userId: '96c0157e-a321-4bb4-b1aa-12c791787f71',
      categoryId: '57e92208-65fb-439e-b912-a47d52e0e2a2',
      title: 'Improved Installation and Frontend Hooks in Laravel Echo 2.1',
      content:
        '<p>The Laravel team has <a target="_blank" rel="noopener noreferrer nofollow" href="https://github.com/laravel/echo/releases/tag/v2.1.0"><strong><u>just shipped</u></strong></a> some big improvements to Laravel Echo, a JavaScript library for real-time event broadcasting.<br><br><a target="_blank" rel="noopener noreferrer nofollow" class="not-prose mr-1 text-gray-600 font-normal heading-permalink" href="https://laravel-news.com/laravel-echo-2-1-0?ref=dailydev#content-improved-installation-experience">#</a><strong>Improved Installation Experience</strong></p><p>First, improvements have been made to the installation experience. When you run the <code>install:broadcasting</code> Artisan command, you will now be prompted for the relevant credentials, write the corresponding <code>.env</code> variables, and more.</p><p>Improved Installation Experience for Laravel Broadcasting (Credit: <a target="_blank" rel="noopener noreferrer nofollow" href="https://x.com/taylorotwell/status/1922356589756916096"><strong><u>Taylor Otwell</u></strong></a>)</p><h2><br><a target="_blank" rel="noopener noreferrer nofollow" class="not-prose mr-1 text-gray-600 font-normal heading-permalink" href="https://laravel-news.com/laravel-echo-2-1-0?ref=dailydev#content-new-useecho-hook">#</a><strong>New </strong><code>useEcho</code><strong> hook</strong></h2><p>Secondly, they have now added <code>useEcho</code> hooks for React and Vue. These hooks will make it simpler to start listening for events and automatically leave channels or disconnect when appropriate. For example, in Vue:</p><p><br><code>&lt;script setup lang="ts"&gt;</code></p><p><code>import { useEcho } from "@laravel/echo-vue";</code></p><p><code>  useEcho(</code></p><p><code>    orders.${orderId},</code></p><p><code>    "OrderShipmentStatusUpdated",</code></p><p><code>    (e) =&gt; {</code></p><p><code>     console.log(e.order);</code></p><p><code>  },</code></p><p><code>);</code></p><p><code>&lt;/script&gt;</code><br><br><a target="_blank" rel="noopener noreferrer nofollow" class="not-prose mr-1 text-gray-600 font-normal heading-permalink" href="https://laravel-news.com/laravel-echo-2-1-0?ref=dailydev#content-new-useechomodel-hook">#</a><strong>New </strong><code>useEchoModel</code><strong> Hook</strong></p><p>It is now easy to listen for model events with the new <code>useEchoModel</code> hook, including type safety.<br><br><code>&lt;script setup lang="ts"&gt;</code></p><p><code>  import { useEchoModel } from "@laravel/echo-vue";</code></p><p><code>&nbsp;</code></p><p><code>  useEchoModel("App.Models.User", userId, ["UserUpdated"], (e) =&gt; {</code></p><p><code>    console.log(e.model);</code></p><p><code>  });</code></p><p><code>&lt;/script&gt;</code><br><br><a target="_blank" rel="noopener noreferrer nofollow" class="not-prose mr-1 text-gray-600 font-normal heading-permalink" href="https://laravel-news.com/laravel-echo-2-1-0?ref=dailydev#content-specify-the-shape-of-event-payload-data">#</a><strong>Specify the Shape of Event Payload Data</strong></p><p>Lastly, support has also been added for allowing developers to specify the shape of their event payload data, providing better type safety and auto-completion.<br><br><code>type User = {</code></p><p><code>  id: number;</code></p><p><code>  name: string;</code></p><p><code>  email: string;</code></p><p><code>};</code></p><p><code>&nbsp;</code><br><code>useEchoModel&lt;User, "App.Models.User"&gt;("App.Models.User", userId, ["UserUpdated"], (e) =&gt; {</code></p><p><code>  console.log(e.model.id);</code></p><p><code>  console.log(e.model.name);</code></p><p><code>});</code><br><br>Learn more about these improvements and more by reading the <a target="_blank" rel="noopener noreferrer nofollow" href="https://laravel.com/docs/12.x/broadcasting"><strong><u>updated Broadcasting documentation page</u></strong></a>.</p>',
      imageUrl:
        'https://s3.sellerpintar.com/articles/articles/1748615926776-Big-Improvements-to-Laravel-Echo-2-1.png',
      createdAt: '2025-05-30T14:39:09.253Z',
      updatedAt: '2025-05-30T17:44:20.693Z',
      category: {
        id: '57e92208-65fb-439e-b912-a47d52e0e2a2',
        userId: '96c0157e-a321-4bb4-b1aa-12c791787f71',
        name: 'Technology',
        createdAt: '2025-05-29T16:09:05.278Z',
        updatedAt: '2025-05-29T16:09:05.278Z',
      },
      user: {
        id: '96c0157e-a321-4bb4-b1aa-12c791787f71',
        username: 'Admin Naufan',
      },
    },
    {
      id: '3945102d-c664-4b9f-864c-13a2081c6f91',
      userId: '96c0157e-a321-4bb4-b1aa-12c791787f71',
      categoryId: '57e92208-65fb-439e-b912-a47d52e0e2a2',
      title:
        'How to Automate CI/CD with GitHub Actions and Streamline Your Workflow',
      content:
        '<p style="text-align: justify">CI/CD stands for Continuous Integration and Continuous Delivery. It is a system or set of processes and methodologies that help developers quickly update codebases and deploy applications. The Continuous Integration (CI) part of CI/CD means that developers can always integrate or merge their changes into the shared repository without breaking anything. Continuous Delivery, on the other hand, means that the code changes are automatically prepared for release after testing and validation. CI/CD primarily involves various stages like building, testing, staging and deployment. Build phase: This is where the code and its dependencies are compiled into a single executable. This is the first phase of Continuous Integration, and is triggered by an event like pushing code to the repository. Test phase: Here, the built artifacts are tested to be sure that the code runs as expected. Staging: Here, the application is run in a production-like environment so as to be sure it is production ready. Deployment: Here, the application is automatically deployed to the end-users. In this article, I’m going to explain how GitHub Actions works. I’ll also talk about basic GitHub Actions concepts, and then we’ll use it to build an example CI/CD pipeline. What is GitHub Actions? GitHub Actions is a service or feature of the GitHub platform that lets developers create their own CI/CD workflows directly on GitHub. It runs jobs on containers hosted by GitHub. The tasks are executed as defined in a YAML file called a workflow. This workflow file has to live on the .github/workflows folder on the repository for it to work. Basic GitHub Actions Concepts GitHub Actions consists of events, jobs, tasks, runners, workflows, and various other features. Here is a brief explanation of the main concepts: Events: An event is basically something that happened. With GitHub, an event can be a push (when you push your code to the repository), a pull request, or even a cron job. These events trigger the CI/CD process. Tasks: When you use CI/CD, you want to be able to trigger an activity that should be done automatically. That activity is known as a task or step in GitHub. It could be building your code or testing it or deploying it. Each of those tasks has to be defined by commands. A GitHub Actions task usually consists of the name, and the instructions on what to do in the form of a command which starts with - run: or an Action which starts with - uses:. steps: - name: Checkout code uses: actions/checkout@v3 - name: Set up Node.js uses: actions/setup-node@v3 with: node-version: 16 - name: Install dependencies run: npm install - name: Run tests run: npm test - name: Build project run: npm run build - name: Deploy run: echo "Deploy step goes here" Runner: A GitHub runner is a server that runs your tasks. It executes what is defined in your GitHub workflow. You can use your own runners or you can use the GitHub runners. Job: A job is a collection of steps that are being executed on the same runner. Jobs are defined in a file called the workflow. Workflow: The GitHub workflow is a series of jobs defined in a YAML file, that are triggered upon an event. The events do not trigger individual tasks. They can only trigger workflows. Then the tasks in the jobs of the workflow are executed. Contexts: These provide a way to access information about workflows, jobs, and environments in GitHub. They are accessed with the expression $${{ }}. Examples include github, env, vars, and secrets. The github context is used to access information about the workflow. For example: $${{github.repository}} # should tell the name of the repository $${{github.actor}} # should tell the username of user that initially triggered the workflow Secrets: This is used to store and access sensitive information that’s used by, and is available to, the workflow. Secrets are redacted when printed to the log. An example is $${{secrets.GITHUB_TOKEN}}. How to Build a Simple CI/CD Pipeline Here, we’re going to build an example workflow to deploy a simple HTML and CSS website to GitHub Pages. Follow the steps below: Go to the sample code in my repository and fork it from here. Go to the settings tab in the GitHub repository: Settings tab Go to the Pages settings: Pages settings menu Set the deployment source to the main branch: Setting deployment source to main branch in GitHub pages Go to the General Actions settings and scroll down to the bottom: Find General Actions setting At the bottom, set the Workflow permissions to read and write: Set workflow permissions to read and write In the GitHub repository, you can clone it to your PC or press the fullstop (.) on your keyboard to open GitHub Codespaces, the online version of VS Code. Go to the sidebar and click on create a new file: Creating new file Create a workflows folder and file. You can call it deploy.yaml. Creating a workflows folder and file named deploy.yaml Copy this code into the file: name: Deploy Static HTML and CSS to GitHub Pages # Trigger the workflow on push to the main branch on: push: branches: - main # Define what operating system the job should run on jobs: deploy: runs-on: ubuntu-latest permissions: contents: write steps: # Step 1: Checkout the repository - name: Checkout Code uses: actions/checkout@v4 # Step 2: Check the files that have been checked out - name: Display files run: ls # Step 3: Deploy to GitHub Pages - name: Deploy uses: peaceiris/actions-gh-pages@v4 with: github_token: ${{ secrets.GITHUB_TOKEN }} publish_dir: ./ # The HTML and CSS files lie in the root directory, hence that should be the publish directory Commit the code. You should see the job running when you go back to the repo: Running job When you’re done, go back to the home page of the repository and click on the Deployments section. There, you will see the GitHub Pages link to the deployment: GitHub Pages link When you’re done, your repository should look like this. Conclusion In this article, you learned about how the CI/CD process works. We also covered the basic concepts of GitHub Actions. Finally, we created an example CI/CD pipeline with GitHub Actions. If you enjoyed this article, share it with others. You can also reach me on LinkedIn or X.</p>',
      imageUrl:
        'https://s3.sellerpintar.com/articles/articles/1748599173799-5cf04403-6bf0-4bf1-b9d3-89722bd90425.png',
      createdAt: '2025-05-30T10:00:06.933Z',
      updatedAt: '2025-05-30T17:13:50.811Z',
      category: {
        id: '57e92208-65fb-439e-b912-a47d52e0e2a2',
        userId: '96c0157e-a321-4bb4-b1aa-12c791787f71',
        name: 'Technology',
        createdAt: '2025-05-29T16:09:05.278Z',
        updatedAt: '2025-05-29T16:09:05.278Z',
      },
      user: {
        id: '96c0157e-a321-4bb4-b1aa-12c791787f71',
        username: 'Admin Naufan',
      },
    },
    {
      id: '3b2f81aa-d902-46c5-a6b7-c55363493a59',
      userId: 'dee2e709-189f-41f6-a87d-f682b292e640',
      categoryId: '1c526098-d855-40b0-868e-dbf248ca4ec3',
      title:
        'The Future of Crypto Economy: Trends, Challenges, and Opportunities',
      content:
        '<p><strong>Introduction</strong></p><p>The cryptocurrency economy has evolved from an obscure digital experiment into a trillion-dollar market reshaping finance, technology, and global trade. With Bitcoin’s rise, DeFi’s disruption, and CBDCs entering the scene, the crypto economy is at a pivotal moment.</p><p>This article explores:</p><p>✅ Key trends shaping the crypto economy</p><p>✅ Major challenges facing adoption</p><p>✅ Future opportunities for investors and developers</p><p><strong>1. Current Trends in the Crypto Economy</strong></p><p><strong>A. Institutional Adoption</strong></p><p>Big players like BlackRock, Fidelity, and Tesla are now investing in Bitcoin and Ethereum, signaling growing trust in crypto as an asset class.</p><p>Bitcoin ETFs have opened doors for traditional investors.</p><p>Banks are offering crypto custody services, bridging traditional finance with digital assets.</p><p><strong>B. The Rise of DeFi (Decentralized Finance)</strong></p><p>DeFi platforms (e.g., Uniswap, Aave) allow users to lend, borrow, and trade without banks.</p><p>🔥 Key Stats:</p><p>Total Value Locked (TVL) in DeFi: Over $80 billion (2024)</p><p>Yield farming and staking provide higher returns than traditional savings.</p><p><strong>C. Central Bank Digital Currencies (CBDCs)</strong></p><p>Countries like China (Digital Yuan), Nigeria (eNaira), and the EU (Digital Euro) are piloting CBDCs.</p><p>Why it matters?</p><p>Faster cross-border payments</p><p>More control for governments over monetary policy</p><p><strong>D. NFTs & Tokenization of Real-World Assets</strong></p><p>NFTs are expanding beyond art into:</p><p>Real estate tokenization (fractional ownership)</p><p>Luxury goods authentication (e.g., Rolex using NFTs for verification)</p><p><strong>2. Major Challenges Facing Crypto</strong></p><p><strong>A. Regulatory Uncertainty</strong></p><p>SEC lawsuits against exchanges (e.g., Coinbase, Binance)</p><p>Bans in some countries (e.g., China, Nigeria)</p><p><strong>B. Security Risks & Hacks</strong></p><p>$3.8 billion lost to crypto hacks in 2022 (Chainalysis)</p><p>Smart contract vulnerabilities (e.g., Ethereum reentrancy attacks)</p><p><strong>C. Market Volatility</strong></p><p>Bitcoin dropped ~75% from its 2021 peak before recovering.</p><p>Stablecoins (like USDT, USDC) help but aren’t risk-free.</p><p><strong>3. Future Opportunities in Crypto</strong></p><p><strong>A. Web3 & The Metaverse Economy</strong></p><p>Virtual land sales (e.g., Decentraland, Sandbox)</p><p>Play-to-Earn (P2E) gaming (e.g., Axie Infinity)</p><p><strong>B. Crypto in Emerging Markets</strong></p><p>Inflation hedge (e.g., Argentina, Turkey adopting stablecoins)</p><p>Remittances (Bitcoin reducing fees for cross-border payments)</p><p><strong>C. AI + Blockchain Integration</strong></p><p>Decentralized AI marketplaces (e.g., Fetch.ai)</p><p>Smart contracts automating DeFi</p><p><strong>Conclusion: Is Crypto the Future of Money?</strong></p><p>The crypto economy is still young but growing fast. While challenges like regulation and security persist, the opportunities—DeFi, CBDCs, Web3—are massive.</p><p><strong>Key Takeaways:</strong></p><p>✔ Institutions are betting big on Bitcoin & Ethereum.</p><p>✔ DeFi is disrupting traditional banking.</p><p>✔ CBDCs could change how governments handle money.</p><p>✔ Security and regulation remain hurdles.</p><p><strong>What’s next?</strong></p><p>Will Bitcoin hit $100K in 2025?</p><p>Will DeFi replace banks?</p><p>How will AI shape crypto’s future?</p><p>The crypto revolution is just beginning. 🚀</p>',
      imageUrl:
        'https://s3.sellerpintar.com/articles/articles/1749007272021-Cryptocurrency_logos.jpg',
      createdAt: '2025-06-04T03:21:12.228Z',
      updatedAt: '2025-06-04T03:21:12.228Z',
      category: {
        id: '1c526098-d855-40b0-868e-dbf248ca4ec3',
        userId: '3c8831bf-b7b7-48ab-b487-dc6764243c36',
        name: 'Economy',
        createdAt: '2025-06-02T04:48:37.104Z',
        updatedAt: '2025-06-02T04:59:24.465Z',
      },
      user: {
        id: 'dee2e709-189f-41f6-a87d-f682b292e640',
        username: 'Saya adalah admin',
      },
    },
    {
      id: '3ffa39ee-12da-4a37-a4b6-cee4c23a9356',
      userId: '96c0157e-a321-4bb4-b1aa-12c791787f71',
      categoryId: '0fa2608c-86df-48fe-89f4-6133af8cb2e0',
      title: 'Compass: A Starter Kit for Online Courses',
      content:
        "<p style=\"text-align: justify\">I've been itching to get back into screencasting and teaching lately, so a couple of months ago I put together this free Build UIs that don't suck mini-course. People seemed to like it and now I want to do some bigger video projects, but there was a problem. I am a software developer. And as a software developer, much like I need to write my own static site generator before I can build my own personal website, I needed to build my own course platform before I could even think about putting together a video course. Well fast-forward six weeks later and we just released Compass, a starter kit we designed with Tailwind CSS and Next.js for publishing your own online course. Compass Check out the live preview as always for the full experience. We had a lot of fun working on this one, and got to play with a bunch of new tools and technologies and solve some interesting problems. Picture-in-picture video You might not have seen it before but most modern browsers have native Picture-in-Picture support. These APIs let you take a video and pop it out into a separate window that the user can move around and resize while still browsing the site. We had this idea for Compass where if you started to play a course video and scrolled down the page, the video would move to the bottom right of the screen so you could still watch it while reading the page content. We were hoping to use the Picture-in-Picture APIs for this, but it turns out you can't passively trigger them on scroll (for privacy/security reasons I guess?) — the user has to actually click something, similar to the clipboard APIs. We ended up rolling our own simple thing instead, using IntersectionObserver, video events, and a bit of state to detect when the video was playing and offscreen, and added data attributes to the element to so we could target them with utility classes: video-player.tsx I love using data attributes for this sort of thing, find the code reads a lot more like standard Tailwind stuff compared to a bunch of ternaries and conditional logic in JavaScript. Parsing VTT files into transcripts There's a section in Compass for interviews, which each include a video at the top of the page but also a pretty custom transcript UI below: Stylized transcript of an interview between Tom Harris and Annie King At first we weren't totally sure how we should approach this. Our first idea was to just write some React components for these pieces and throw the content directly into an MDX file, but it felt sort of unrealistic to expect anyone to ever author their transcripts in this totally custom format. Then I had the idea to use a standard caption file format, like SRT. The problem was that for our needs, we needed to encode the current speaker (Tom or Annie in the screenshot above), and SRT has no standardized way of encoding that information in the file. I did some more research and eventually landed on WebVTT, which is similar to SRT but does support speaker information, and is conveniently designed for the web. annie-king.vtt WEBVTT 00:00.000 --&gt; 00:20.000 Hello fellow passengers, welcome to the Compass podcast. Today, we have a special guest, Annie King. She's the author of The Inevitable You: How to Embrace Your Path and Succeed with Relentless Precision. Annie, welcome to the show. 00:20.000 --&gt; 00:35.000 Thank you! I'm so happy to be here. And thanks for sending me the questions in advance — I'm really excited to share some of the ideas from the book with your viewers. I think we're going to have a lot of fun unpacking what it means to truly embrace your path. 00:35.000 --&gt; 00:45.000 Absolutely! I want to get into your book, but first I have to ask — what was it like growing up in a household that treated organization almost like...a sport? So we wired things up to parse the transcript data from a .vtt file, and then map over that data to render it as a custom UI with React: src/interview/[slug]/page.tsx</p><p style=\"text-align: justify\"> {transcript.map(({ start, speaker, text }) =&gt; (</p><p style=\"text-align: justify\">{speaker}</p><p style=\"text-align: justify\"> {text.map((p, index) =&gt; (</p><p style=\"text-align: justify\">{p}</p><p style=\"text-align: justify\"> ))}</p><p style=\"text-align: justify\"> ))}</p><p style=\"text-align: justify\"> Turned out pretty cool — I can imagine someone just generating a transcript in VTT format using AI, throwing it into the project and it'll automatically be rendered in a nice custom UI. Extending Markdown images for dark mode and layout shift The example content we came up with for Compass includes a lot of diagrams that we wanted to adapt between light and dark mode. Example of a diagram that uses different colors for light and dark mode You can do this sort of thing a ton of different ways (the tag supports it natively for example), but we really wanted to keep the content files feeling as much like vanilla Markdown as possible. So we came up with this idea of a {scheme} placeholder in the image URL that we replace with light or dark dynamically, loading the correct image based on the user's color scheme: ## The Myth of Free Will ![Neurological Proof](/img/neuro-proof.{scheme}.png) Your brain makes decisions before you are even aware of them. Now the underlying image component will automatically render neuro-proof.light.png or neuro-proof.dark.png depending on the current color scheme. And if you just want to use the same image in both, just don't include {scheme} in the URL at all. We also wanted to avoid layout shift in the content, which you can do pretty easily these days by ensuring you give your images width and height attributes so the browser can compute the aspect ratio and reserve space for the image when it loads. There's no standard way to express this in Markdown's image syntax, but after a bit of research we discovered some precedent in Obsidian. Obsidian tacks the image dimensions on to the alt text, like this: ## The Myth of Free Will ![Neurological Proof|2000x990](/img/neuro-proof.{scheme}.png) Your brain makes decisions before you are even aware of them. So we used a custom MDX component to pull out the dimensions using the same format, and add those to the image to make sure there's no layout shift as the content loads. So there you go — that's Compass! As always it's a free update for anyone with a Tailwind Plus license, so go and download the codebase, poke around, and have fun with it. If you don't already have a Tailwind Plus license, think about getting one! Picking one up is the best way to support our work on Tailwind CSS and there's a ton of useful stuff in there. Looking forward to using this template for some upcoming projects myself in the next couple of months!</p>",
      imageUrl:
        'https://s3.sellerpintar.com/articles/articles/1748535858522-preview-01.png',
      createdAt: '2025-05-29T16:24:47.039Z',
      updatedAt: '2025-05-30T17:13:43.236Z',
      category: {
        id: '0fa2608c-86df-48fe-89f4-6133af8cb2e0',
        userId: '96c0157e-a321-4bb4-b1aa-12c791787f71',
        name: 'Education',
        createdAt: '2025-05-29T17:46:39.287Z',
        updatedAt: '2025-05-29T17:46:39.287Z',
      },
      user: {
        id: '96c0157e-a321-4bb4-b1aa-12c791787f71',
        username: 'Admin Naufan',
      },
    },
    {
      id: '4c2cf061-ef8c-4d91-877e-e71a15ad1613',
      userId: 'b2ed81be-a3bd-46fa-8901-c4db238ca9ad',
      categoryId: '50d718d7-1916-4cc9-bd99-8c130202a5e5',
      title: 'coba 1',
      content: 'coba bisa ngga',
      imageUrl: null,
      createdAt: '2025-06-04T07:06:13.633Z',
      updatedAt: '2025-06-04T07:06:13.633Z',
      category: {
        id: '50d718d7-1916-4cc9-bd99-8c130202a5e5',
        userId: 'a066e0e3-299f-4658-833f-d50e8b95434a',
        name: 'test',
        createdAt: '2025-06-04T00:48:15.357Z',
        updatedAt: '2025-06-04T00:48:15.357Z',
      },
      user: {
        id: 'b2ed81be-a3bd-46fa-8901-c4db238ca9ad',
        username: 'Resti12',
      },
    },
    {
      id: '56dac0d8-e9cf-4e2d-b121-a191658c87d8',
      userId: '9d91c4e9-2cd3-4cf9-b3e0-3af9b99b4bc9',
      categoryId: '0fa2608c-86df-48fe-89f4-6133af8cb2e0',
      title: 'Test Article 1748847294184 hehe haha hoho',
      content: 'This is a test content for debugging purposes hehe haha hoho',
      imageUrl:
        'https://s3.sellerpintar.com/articles/articles/1748877785233-Articles - Default 1.png',
      createdAt: '2025-06-02T06:55:00.531Z',
      updatedAt: '2025-06-02T15:45:13.290Z',
      category: {
        id: '0fa2608c-86df-48fe-89f4-6133af8cb2e0',
        userId: '96c0157e-a321-4bb4-b1aa-12c791787f71',
        name: 'Education',
        createdAt: '2025-05-29T17:46:39.287Z',
        updatedAt: '2025-05-29T17:46:39.287Z',
      },
      user: {
        id: '9d91c4e9-2cd3-4cf9-b3e0-3af9b99b4bc9',
        username: 'hehe',
      },
    },
    {
      id: '5c79e9f6-9356-4633-a0ce-acf3222f06bd',
      userId: '35e507a4-b8de-41bd-967a-edd22330f713',
      categoryId: '68545809-3f62-4241-804f-a5113bdd58bf',
      title: 'test',
      content:
        '<ul><li>test <strong>aja boy<em> hahahaha</em></strong></li></ul>',
      imageUrl:
        'https://s3.sellerpintar.com/articles/articles/1748756955377-photo_6165485795075541099_y.jpeg',
      createdAt: '2025-06-01T05:52:38.552Z',
      updatedAt: '2025-06-01T05:52:38.552Z',
      category: {
        id: '68545809-3f62-4241-804f-a5113bdd58bf',
        userId: '3c8831bf-b7b7-48ab-b487-dc6764243c36',
        name: 'Economy',
        createdAt: '2025-05-31T11:21:33.015Z',
        updatedAt: '2025-05-31T11:22:07.097Z',
      },
      user: {
        id: '35e507a4-b8de-41bd-967a-edd22330f713',
        username: 'admin13',
      },
    },
    {
      id: '6dd99492-a4e5-426f-a3f6-2dbcad7bf5ff',
      userId: 'a066e0e3-299f-4658-833f-d50e8b95434a',
      categoryId: '50d718d7-1916-4cc9-bd99-8c130202a5e5',
      title: 'berita uhuy',
      content: '<p>pada zaman dahulu kalau woipjqeopqwjep</p>',
      imageUrl: null,
      createdAt: '2025-06-04T04:29:42.079Z',
      updatedAt: '2025-06-04T04:29:42.079Z',
      category: {
        id: '50d718d7-1916-4cc9-bd99-8c130202a5e5',
        userId: 'a066e0e3-299f-4658-833f-d50e8b95434a',
        name: 'test',
        createdAt: '2025-06-04T00:48:15.357Z',
        updatedAt: '2025-06-04T00:48:15.357Z',
      },
      user: {
        id: 'a066e0e3-299f-4658-833f-d50e8b95434a',
        username: 'test123123',
      },
    },
  ]
  return (
    <Fragment>
      <header className=" p-3">
        <div className="w-full grid place-items-center">
          <Input className="w-[20%]" />
          <div>
            <ul className="flex gap-3 mt-5">
              <li className="min-w-16 hover:bg-gray-400 hover:rounded-lg hover:text-white cursor-pointer p-2 text-[12px]">
                Manajemen
              </li>
              <li className="min-w-16 hover:bg-gray-400 hover:rounded-lg hover:text-white cursor-pointer p-2 text-[12px]">
                Manajemen
              </li>
              <li className="min-w-16 hover:bg-gray-400 hover:rounded-lg hover:text-white cursor-pointer p-2 text-[12px]">
                Manajemen
              </li>
            </ul>
          </div>
        </div>
      </header>
      <hr className="w-full" />
      <h1 className="grid place-items-center mt-10">Article</h1>

      <List data={data} />
    </Fragment>
  )
}
