{
  "version": 3,
  "pages404": true,
  "caseSensitive": false,
  "basePath": "",
  "redirects": [
    {
      "source": "/:path+/",
      "destination": "/:path+",
      "internal": true,
      "statusCode": 308,
      "regex": "^(?:/((?:[^/]+?)(?:/(?:[^/]+?))*))/$"
    }
  ],
  "headers": [
    {
      "source": "/:path*",
      "headers": [
        {
          "key": "Referrer-Policy",
          "value": "strict-origin-when-cross-origin"
        },
        {
          "key": "Permissions-Policy",
          "value": "camera=(), microphone=(), geolocation=(), interest-cohort=()"
        }
      ],
      "regex": "^(?:/((?:[^/]+?)(?:/(?:[^/]+?))*))?(?:/)?$"
    }
  ],
  "dynamicRoutes": [
    {
      "page": "/article/[article]",
      "regex": "^/article/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtParticle": "nxtParticle"
      },
      "namedRegex": "^/article/(?<nxtParticle>[^/]+?)(?:/)?$"
    }
  ],
  "staticRoutes": [
    {
      "page": "/",
      "regex": "^/(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/(?:/)?$"
    },
    {
      "page": "/_not-found",
      "regex": "^/_not\\-found(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/_not\\-found(?:/)?$"
    },
    {
      "page": "/admin/article",
      "regex": "^/admin/article(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/admin/article(?:/)?$"
    },
    {
      "page": "/admin/category",
      "regex": "^/admin/category(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/admin/category(?:/)?$"
    },
    {
      "page": "/article",
      "regex": "^/article(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/article(?:/)?$"
    },
    {
      "page": "/favicon.ico",
      "regex": "^/favicon\\.ico(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/favicon\\.ico(?:/)?$"
    },
    {
      "page": "/login",
      "regex": "^/login(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/login(?:/)?$"
    }
  ],
  "dataRoutes": [],
  "rsc": {
    "header": "RSC",
    "varyHeader": "RSC, Next-Router-State-Tree, Next-Router-Prefetch, Next-Router-Segment-Prefetch",
    "prefetchHeader": "Next-Router-Prefetch",
    "didPostponeHeader": "x-nextjs-postponed",
    "contentTypeHeader": "text/x-component",
    "suffix": ".rsc",
    "prefetchSuffix": ".prefetch.rsc",
    "prefetchSegmentHeader": "Next-Router-Segment-Prefetch",
    "prefetchSegmentSuffix": ".segment.rsc",
    "prefetchSegmentDirSuffix": ".segments"
  },
  "rewriteHeaders": {
    "pathHeader": "x-nextjs-rewritten-path",
    "queryHeader": "x-nextjs-rewritten-query"
  },
  "rewrites": {
    "beforeFiles": [
      {
        "source": "/seller-pintar/:path*",
        "destination": "https://test-fe.mysellerpintar.com/:path*",
        "regex": "^/seller-pintar(?:/((?:[^/]+?)(?:/(?:[^/]+?))*))?(?:/)?$"
      }
    ],
    "afterFiles": [
      {
        "source": "/seller-pintar/:path*",
        "destination": "https://test-fe.mysellerpintar.com/:path*",
        "regex": "^/seller-pintar(?:/((?:[^/]+?)(?:/(?:[^/]+?))*))?(?:/)?$"
      }
    ],
    "fallback": [
      {
        "source": "/seller-pintar/:path*",
        "destination": "https://test-fe.mysellerpintar.com/:path*",
        "regex": "^/seller-pintar(?:/((?:[^/]+?)(?:/(?:[^/]+?))*))?(?:/)?$"
      }
    ]
  }
}